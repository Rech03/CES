# Generated by Django 5.2.4 on 2025-09-07 01:03

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('analytics', '0001_initial'),
        ('courses', '0003_attendance'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LectureSlide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slide_file', models.FileField(help_text='Upload PDF lecture slides', upload_to='lecture_slides/')),
                ('extracted_text', models.TextField(blank=True, help_text='Automatically extracted text from PDF')),
                ('questions_generated', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='lecture_slides', to='courses.topic')),
                ('uploaded_by', models.ForeignKey(limit_choices_to={'user_type': 'lecturer'}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AdaptiveQuiz',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('difficulty', models.CharField(choices=[('easy', 'Easy'), ('medium', 'Medium'), ('hard', 'Hard')], max_length=10)),
                ('questions_data', models.JSONField(help_text='Questions, options, and explanations generated by Claude')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('lecture_slide', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='adaptive_quizzes', to='analytics.lectureslide')),
            ],
            options={
                'ordering': ['difficulty', '-created_at'],
                'unique_together': {('lecture_slide', 'difficulty')},
            },
        ),
        migrations.CreateModel(
            name='StudentAdaptiveProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempts_count', models.PositiveIntegerField(default=0)),
                ('best_score', models.FloatField(default=0.0)),
                ('latest_score', models.FloatField(default=0.0)),
                ('completed', models.BooleanField(default=False)),
                ('unlocked_next_level', models.BooleanField(default=False)),
                ('explanation_viewed', models.BooleanField(default=False)),
                ('first_attempt_at', models.DateTimeField(auto_now_add=True)),
                ('last_attempt_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('adaptive_quiz', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='student_progress', to='analytics.adaptivequiz')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='adaptive_progress', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-last_attempt_at'],
                'unique_together': {('student', 'adaptive_quiz')},
            },
        ),
        migrations.CreateModel(
            name='AdaptiveQuizAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('answers_data', models.JSONField(help_text='Student answers for this attempt')),
                ('score_percentage', models.FloatField()),
                ('time_taken', models.DurationField(blank=True, null=True)),
                ('started_at', models.DateTimeField(auto_now_add=True)),
                ('completed_at', models.DateTimeField(auto_now=True)),
                ('progress', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attempts', to='analytics.studentadaptiveprogress')),
            ],
            options={
                'ordering': ['-started_at'],
            },
        ),
    ]
