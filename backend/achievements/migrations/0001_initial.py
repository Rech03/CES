# Generated by Django 5.2.4 on 2025-09-20 21:41

import datetime
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('courses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='BadgeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('performance', 'Performance'), ('streak', 'Streak'), ('completion', 'Completion'), ('special', 'Special')], max_length=20)),
                ('rarity', models.CharField(choices=[('common', 'Common'), ('earned', 'Earned'), ('gold', 'Gold'), ('legendary', 'Legendary')], default='common', max_length=20)),
                ('icon', models.CharField(help_text='Icon identifier for frontend', max_length=50)),
                ('color', models.CharField(default='#f59e0b', help_text='Hex color code', max_length=7)),
                ('xp_reward', models.IntegerField(default=100)),
                ('required_score', models.FloatField(blank=True, help_text='Required score percentage', null=True)),
                ('required_streak', models.IntegerField(blank=True, help_text='Required consecutive days', null=True)),
                ('required_quizzes', models.IntegerField(blank=True, help_text='Required number of quizzes', null=True)),
                ('required_perfect_scores', models.IntegerField(blank=True, help_text='Required perfect scores', null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ['category', 'rarity', 'name'],
            },
        ),
        migrations.CreateModel(
            name='StudentAchievement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_xp', models.IntegerField(default=0)),
                ('level', models.IntegerField(default=1)),
                ('xp_to_next_level', models.IntegerField(default=1000)),
                ('current_streak', models.IntegerField(default=0)),
                ('best_streak', models.IntegerField(default=0)),
                ('last_activity_date', models.DateField(blank=True, null=True)),
                ('total_quizzes_completed', models.IntegerField(default=0)),
                ('perfect_scores', models.IntegerField(default=0)),
                ('average_score', models.FloatField(default=0.0)),
                ('total_study_time', models.DurationField(default=datetime.timedelta)),
                ('badges_earned', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('student', models.OneToOneField(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='achievements', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DailyActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('quizzes_completed', models.IntegerField(default=0)),
                ('xp_earned', models.IntegerField(default=0)),
                ('study_time', models.DurationField(default=datetime.timedelta)),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='daily_activities', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'unique_together': {('student', 'date')},
            },
        ),
        migrations.CreateModel(
            name='EarnedBadge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned_at', models.DateTimeField(auto_now_add=True)),
                ('badge_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='achievements.badgetype')),
                ('course', models.ForeignKey(blank=True, help_text='Course context where badge was earned', null=True, on_delete=django.db.models.deletion.CASCADE, to='courses.course')),
                ('student', models.ForeignKey(limit_choices_to={'user_type': 'student'}, on_delete=django.db.models.deletion.CASCADE, related_name='earned_badges', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-earned_at'],
                'unique_together': {('student', 'badge_type')},
            },
        ),
    ]
